{"version":3,"sources":["D:/Maheswari/angular -II/client/src/$_gendir lazy","D:/Maheswari/angular -II/client/src/app/app-routing.module.ts","D:/Maheswari/angular -II/client/src/app/app.component.css","D:/Maheswari/angular -II/client/src/app/app.component.html","D:/Maheswari/angular -II/client/src/app/app.component.ts","D:/Maheswari/angular -II/client/src/app/app.module.ts","D:/Maheswari/angular -II/client/src/app/chathome/chathome.component.css","D:/Maheswari/angular -II/client/src/app/chathome/chathome.component.html","D:/Maheswari/angular -II/client/src/app/chathome/chathome.component.ts","D:/Maheswari/angular -II/client/src/app/dashboard/dashboard.component.css","D:/Maheswari/angular -II/client/src/app/dashboard/dashboard.component.html","D:/Maheswari/angular -II/client/src/app/dashboard/dashboard.component.ts","D:/Maheswari/angular -II/client/src/app/guards/auth.guard.ts","D:/Maheswari/angular -II/client/src/app/guards/notAuth.guard.ts","D:/Maheswari/angular -II/client/src/app/home/home.component.css","D:/Maheswari/angular -II/client/src/app/home/home.component.html","D:/Maheswari/angular -II/client/src/app/home/home.component.ts","D:/Maheswari/angular -II/client/src/app/login/login.component.css","D:/Maheswari/angular -II/client/src/app/login/login.component.html","D:/Maheswari/angular -II/client/src/app/login/login.component.ts","D:/Maheswari/angular -II/client/src/app/navbar/navbar.component.css","D:/Maheswari/angular -II/client/src/app/navbar/navbar.component.html","D:/Maheswari/angular -II/client/src/app/navbar/navbar.component.ts","D:/Maheswari/angular -II/client/src/app/register/register.component.css","D:/Maheswari/angular -II/client/src/app/register/register.component.html","D:/Maheswari/angular -II/client/src/app/register/register.component.ts","D:/Maheswari/angular -II/client/src/app/service/auth.service.ts","D:/Maheswari/angular -II/client/src/app/service/crudservice.service.ts","D:/Maheswari/angular -II/client/src/environments/environment.ts","D:/Maheswari/angular -II/client/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ChathomeComponent } from './chathome/chathome.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { NotAuthGuard } from './guards/notAuth.guard';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n   { path: 'login', component: LoginComponent ,canActivate: [NotAuthGuard] },\r\n   { path: 'chat', component: ChathomeComponent ,canActivate: [AuthGuard] },\r\n   { path:'register', component:RegisterComponent,canActivate: [NotAuthGuard] },\r\n    { path:'dashboard', component:DashboardComponent,canActivate: [AuthGuard] }\r\n\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  providers: [],\r\n  bootstrap: [],\r\n  exports:[RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <flash-messages></flash-messages>\\r\\n<router-outlet></router-outlet>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { NavbarComponent } from './navbar/navbar.component';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n \n} \n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule }    from '@angular/http';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthGuard } from './guards/auth.guard';\nimport { NotAuthGuard } from './guards/notAuth.guard';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ChathomeComponent } from './chathome/chathome.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\n\nimport { AuthService } from './service/auth.service';\nimport { CrudserviceService } from './service/crudservice.service';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ChathomeComponent,\n    NavbarComponent,\n    HomeComponent,\n    RegisterComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    HttpModule,\n    FlashMessagesModule\n  ],\n  providers: [AuthService,AuthGuard, NotAuthGuard,CrudserviceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/chathome/chathome.component.css\n// module id = ../../../../../src/app/chathome/chathome.component.css\n// module chunks = main","module.exports = \"\\n<h2 class=\\\"page-header\\\">Chat  Page</h2>\\n<ul class=\\\"list-group\\\">\\n  <li class=\\\"list-group-item\\\">Username: {{ username }}</li>\\n  <li class=\\\"list-group-item\\\">Email: {{ email }}</li>\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/chathome/chathome.component.html\n// module id = ../../../../../src/app/chathome/chathome.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-chathome',\n  templateUrl: './chathome.component.html',\n  styleUrls: ['./chathome.component.css']\n})\nexport class ChathomeComponent implements OnInit {\n\nusername;\nemail;\n  constructor( public authService: AuthService) { }\n\n  ngOnInit() {\n  this.authService.getProfile().subscribe(profile => {\n  console.log(profile);\n      this.username = profile.user.username; // Set username\n      this.email = profile.user.email; // Set e-mail\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/chathome/chathome.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<h1 class=\\\"page-header\\\">CRUD</h1>\\n\\n<div class=\\\"row show-hide-message\\\" *ngIf=\\\"message\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{ message }}\\n  </div>\\n</div>\\n\\n<button type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"newBlogForm()\\\"><span class=\\\"glyphicon glyphicon-plus\\\"></span>New Item</button>\\n\\n<!-- Reload Button -->\\n<button [disabled]=\\\"loadingBlogs\\\" type=\\\"button\\\" name=\\\"button\\\" class=\\\"btn btn-info\\\" *ngIf=\\\"!newPost\\\" (click)=\\\"reloadBlogs()\\\"><span class=\\\"glyphicon glyphicon-repeat\\\"></span>&nbsp;&nbsp;Reload</button>\\n\\n<br />\\n<br />\\n\\n<form [formGroup]=\\\"form\\\" name=\\\"blogForm\\\" (submit)=\\\"onBlogSubmit()\\\" *ngIf=\\\"newPost\\\">\\n  <!-- Title Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"title\\\">Item</label>\\n    <div [ngClass]=\\\"{'has-success': form.controls.title.valid, 'has-error': form.controls.title.dirty && form.controls.title.errors}\\\">\\n      <!-- Title Input -->\\n      <input type=\\\"text\\\" [(ngModel)]=\\\"data.title\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\" Title\\\" autocomplete=\\\"off\\\" formControlName=\\\"title\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.required\\\">This field is required.</li>\\n        <li *ngIf=\\\"(form.controls.title.dirty && form.controls.title.errors?.minlength) || (form.controls.title.dirty && form.controls.title.errors?.maxlength)\\\">Max length: 50, Min length: 5</li>\\n        <li *ngIf=\\\"form.controls.title.dirty && form.controls.title.errors?.alphaNumericValidation\\\">Must be a letter or number</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Body Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"body\\\">Description</label>\\n    <div [ngClass]=\\\"{'has-success': form.controls.body.valid, 'has-error': form.controls.body.dirty && form.controls.body.errors}\\\">\\n      <!-- Body Input -->\\n      <textarea [(ngModel)]=\\\"data.body\\\" name=\\\"body\\\" rows=\\\"8\\\" cols=\\\"80\\\" placeholder=\\\"Desc....\\\" class=\\\"form-control\\\" formControlName=\\\"body\\\"></textarea>\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.body.dirty && form.controls.body.errors?.required\\\">This field is required.</li>\\n        <li *ngIf=\\\"(form.controls.body.dirty && form.controls.body.errors?.minlength) || (form.controls.body.dirty && form.controls.body.errors?.maxlength)\\\">Max length: 500, Min length: 5</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Go Back Button -->\\n  <button [disabled]=\\\"processing\\\" type=\\\"button\\\" name=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"btn btn-warning\\\">Go Back</button>\\n  <!-- Submit Button -->\\n  <button *ngIf=\\\"!sbt\\\" [disabled]=\\\"processing || !form.valid\\\" type=\\\"submit\\\" name=\\\"button\\\" class=\\\"btn btn-success\\\">Submit</button>\\n\\n  <button *ngIf=\\\"!updatebtn\\\"  [disabled] =\\\"processing\\\" type=\\\"button\\\" (click)=\\\"update()\\\" name=\\\"button\\\" class=\\\"btn btn-info\\\">Update</button>\\n\\n</form>\\n<div *ngIf=\\\"availableitem\\\">\\n<table class=\\\"table table-striped table-hover \\\">\\n\\t<thead>\\n    <tr>\\n      <!-- <th>#</th> -->\\n\\t\\t<th>Item Title</th>\\n\\t\\t<th>Description</th>\\n\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t<tr *ngFor=\\\"let i of items\\\">\\n\\t<!-- <td>{{i.id=$index+1}}</td> -->\\n\\t<td>{{ i.title }}</td>\\n\\t<td>{{ i.body }}</td>\\n\\t<td><button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"Edit(i)\\\"><span class=\\\"glyphicon glyphicon-edit\\\"></span></button></td>\\n\\t<td><button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"Delete(i)\\\"><span class=\\\"glyphicon glyphicon-trash\\\"></span></button></td>\\n\\t</tr>\\n\\t</tbody>\\n</table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../service/auth.service';\nimport { CrudserviceService } from '../service/crudservice.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\nmessageClass;\n  message;\n  processing = false;\n  form;\n  items;\n  newPost = false;\n  availableitem=false;\n  title;desc;\n  data={};\n  updatebtn=true;\n sbt=true;\n\n  constructor(private formBuilder: FormBuilder,\n    public authService: AuthService,\n    private crudService: CrudserviceService,\n     public router: Router\n  ) {\n    this.create(); // Create new blog form on start up\n    }\n\nnewBlogForm() {\n    this.newPost = true;\n    this.sbt=false; // Show new blog form\n  }\n    create() {\n    this.form = this.formBuilder.group({\n      // Title field\n      title: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(50),\n        Validators.minLength(5),\n        this.alphaNumericValidation\n      ])],\n      // Body field\n      body: ['', Validators.compose([\n        Validators.required,\n        Validators.maxLength(500),\n        Validators.minLength(5)\n      ])]\n    })\n  }\n\nalphaNumericValidation(controls) {\n    const regExp = new RegExp(/^[a-zA-Z0-9 ]+$/); // Regular expression to perform test\n    // Check if test returns false or true\n    if (regExp.test(controls.value)) {\n      return null; // Return valid\n    } else {\n      return { 'alphaNumericValidation': true } // Return error in validation\n    }\n  }\n\n  enableFormNewBlogForm() {\n    this.form.get('title').enable(); // Enable title field\n    this.form.get('body').enable(); // Enable body field\n  }\n\n  // Disable new blog form\n  disableFormNewBlogForm() {\n    this.form.get('title').disable(); // Disable title field\n    this.form.get('body').disable(); // Disable body field\n  }\n\n\n\n  onBlogSubmit() {\n    this.processing = true; // Disable submit button\n    this.disableFormNewBlogForm(); // Lock form\n\n    // Create blog object from form fields\n    const item = {\n      title: this.form.get('title').value, // Title field\n      body: this.form.get('body').value // Body field\n      \n    }\n\n    // Function to save blog into database\n    this.crudService.newitem(item).subscribe(data => {\n      // Check if blog was saved to database or not\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Return error class\n        this.message = data.message; // Return error message\n        this.processing = false; // Enable submit button\n        this.enableFormNewBlogForm(); // Enable form\n      } else {\n        this.messageClass = 'alert alert-success'; // Return success class\n        this.message = data.message; // Return success message\n        this.getAllBlogs();\n        // Clear form data after two seconds\n        setTimeout(() => {\n          this.newPost = false; // Hide form\n          this.processing = false; // Enable submit button\n          this.message = false; // Erase error/success message\n          this.form.reset(); // Reset all form fields\n          this.enableFormNewBlogForm(); // Enable the form fields\n        }, 2000);\n      }\n    });\n  }\n  goBack() {\n    window.location.reload(); // Clear all variable states\n  }\ngetAllBlogs() {\n    // Function to GET all blogs from database\n    this.crudService.getAllBlogs().subscribe(data => {\n      this.items = data.blogs; \n      console.log(this.items);\n      if(this.items.length>0)\n      {\nthis.availableitem=true;\n      }\n      else{\nthis.availableitem=false\n      }\n    });\n  }\nEdit(i){\n\tthis.crudService.getSingle(i._id).subscribe(data=>{\n\t\tconsole.log(data.title);\n\t\tthis.data=data;\n\t\t// this.data.title=data.title;\n\t\tconsole.log(this.data);\n\t\tthis.newPost=true;\n\t\t this.sbt=true;\n\t\t this.updatebtn=false;\n\t})\n}\nupdate()\n{\nconsole.log(this.data);\n    this.processing = true; // Lock form fields\n    // Function to send blog object to backend\n    this.crudService.editBlog(this.data).subscribe(data => {\n      // Check if PUT request was a success or not\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Set error bootstrap class\n        this.message = data.message; // Set error message\n        this.processing = false; // Unlock form fields\n      } else {\n        this.messageClass = 'alert alert-success'; // Set success bootstrap class\n        this.message = data.message; \n        this.getAllBlogs();// Set success message\n        // After two seconds, navigate back to blog page\n        setTimeout(() => {\n          // this.router.navigate(['/dashboard']); // Navigate back to route page\n         window.location.reload(); \n        }, 1000);\n      }\n    });\n  }\n  Delete(i){\n\n    this.processing = true; // Disable buttons\n    // Function for DELETE request\n    this.crudService.deleteBlog(i._id).subscribe(data => {\n      // Check if delete request worked\n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Return error bootstrap class\n        this.message = data.message; // Return error message\n      } else {\n        this.messageClass = 'alert alert-success'; // Return bootstrap success class\n        this.message = data.message;\n          this.getAllBlogs();\n         // Return success message\n        // After two second timeout, route to blog page\n        setTimeout(() => {\n      //   //   this.router.navigate(['/dashboard']);\n          window.location.reload(); // Route users to blog page\n        }, 1000);\n      }\n    });\n  \n\n  }\n\n  ngOnInit() {\n  \tthis.getAllBlogs();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/dashboard/dashboard.component.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  redirectUrl;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to check if user is authorized to view route\r\n  canActivate(\r\n    router: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ) {\r\n    // Check if user is logge din\r\n    if (this.authService.loggedIn()) {\r\n      return true; // Return true: User is allowed to view route\r\n    } else {\r\n      this.redirectUrl = state.url; // Grab previous urul\r\n      this.router.navigate(['/login']); // Return error and route to login page\r\n      return false; // Return false: user not authorized to view page\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Injectable()\r\nexport class NotAuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  // Function to determine whether user is authorized to view route\r\n  canActivate() {\r\n    // Check if user is logged in\r\n    if (this.authService.loggedIn()) {\r\n      this.router.navigate(['/']); // Return error, route to home\r\n      return false; // Return false: user not allowed to view route\r\n    } else {\r\n      return true; // Return true: user is allowed to view route\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/guards/notAuth.guard.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<p>\\n  home!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/home/home.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = main","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n\\n<!-- Custom Success/Error Message -->\\n<div class=\\\"row show-hide-message\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{ message }}\\n  </div>\\n</div>\\n\\n<!-- Login Form -->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onLoginSubmit()\\\">\\n\\n  <!-- Username Field -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <div [ngClass]=\\\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\\\">\\n      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required.</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Password Field  -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <div [ngClass]=\\\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\\\">\\n      <input class=\\\"form-control\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required.</li>\\n      </ul>\\n    </div>\\n  </div>\\n  <!-- Submit Button -->\\n  <input [disabled]=\\\"!form.valid || processing\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\" value=\\\"Login\\\" />\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthService } from '../service/auth.service';\nimport { Router } from '@angular/router';\nimport { AuthGuard } from '../guards/auth.guard';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nmessageClass;\n  message;\n  processing = false;\n  form;\n  previousUrl;\n  constructor(private formBuilder: FormBuilder,\n    public authService: AuthService,\n    public router: Router,\n    private authGuard: AuthGuard\n    ) {\nthis.createForm();\n     }\n\n\n createForm() {\n    this.form = this.formBuilder.group({\n      username: ['', Validators.required], // Username field\n      password: ['', Validators.required] // Password field\n    });\n  }\n\n \n  disableForm() {\n    this.form.controls['username'].disable(); // Disable username field\n    this.form.controls['password'].disable(); // Disable password field\n  }\n\n \n  enableForm() {\n    this.form.controls['username'].enable(); // Enable username field\n    this.form.controls['password'].enable(); // Enable password field\n  }\n\nonLoginSubmit() {\n    this.processing = true; \n    this.disableForm(); \n    \n    const user = {\n      username: this.form.get('username').value, // Username input field\n      password: this.form.get('password').value // Password input field\n    }\n\n    \n    this.authService.login(user).subscribe(data => {\n    console.log(user);\n     \n      if (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Set bootstrap error class\n        this.message = data.message; // Set error message\n        this.processing = false; // Enable submit button\n        this.enableForm(); // Enable form for editting\n      } else {\n        this.messageClass = 'alert alert-success'; // Set bootstrap success class\n        this.message = data.message;\n         this.authService.storeUserData(data.token, data.user);\n        \n       setTimeout(() => {\n          // Check if user was redirected or logging in for first time\n          if (this.previousUrl) {\n            this.router.navigate([this.previousUrl]); // Redirect to page they were trying to view before\n          } else {\n            this.router.navigate(['/chat']); // Navigate to dashboard view\n          }\n        }, 2000);\n        }\n        });\n        }\n\n ngOnInit() {\n    // On page load, check if user was redirected to login\n    if (this.authGuard.redirectUrl) {\n      this.messageClass = 'alert alert-danger'; // Set error message: need to login\n      this.message = 'You must be logged in to view that page.'; // Set message\n      this.previousUrl = this.authGuard.redirectUrl; // Set the previous URL user was redirected from\n      this.authGuard.redirectUrl = undefined; // Erase previous URL\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/login/login.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/navbar/navbar.component.css\n// module id = ../../../../../src/app/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"navbar-header\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n            <span class=\\\"sr-only\\\">Toggle navigation</span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n            <span class=\\\"icon-bar\\\"></span>\\n          </button>\\n          <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Chat</a>\\n        </div>\\n        <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\n          <ul class=\\\"nav navbar-nav navbar-right\\\">\\n            <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/\\\">Home</a></li>\\n            <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><a  *ngIf=\\\"authService.loggedIn()\\\"routerLink=\\\"/chat\\\">Chat</a></li>\\n          <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><a  *ngIf=\\\"authService.loggedIn()\\\"routerLink=\\\"/dashboard\\\">CRUD</a></li>\\n            <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><a *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/login\\\">Login</a></li>\\n            <li [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions]=\\\"{ exact: true }\\\"><a  *ngIf=\\\"!authService.loggedIn()\\\" routerLink=\\\"/register\\\">Register</a></li>\\n            <li><a *ngIf=\\\"authService.loggedIn()\\\"  (click)=\\\"onLogoutClick()\\\">Logout</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/navbar/navbar.component.html\n// module id = ../../../../../src/app/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../service/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\npublic authService: AuthService,\n    public router: Router,\n    private flashMessagesService: FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\nonLogoutClick() {\n    this.authService.logout(); // Logout user\n    this.flashMessagesService.show('You are logged out', { cssClass: 'alert-info' }); \n    this.router.navigate(['/']); // Navigate back to home page\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/navbar/navbar.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/register/register.component.css\n// module id = ../../../../../src/app/register/register.component.css\n// module chunks = main","module.exports = \"<h1>Register here</h1>\\n<div class=\\\"row show-hide-message\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{ message }}\\n  </div>\\n</div>\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n<div class=\\\"form-group\\\" >\\n    <label for=\\\"username\\\">UserName</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'has-success': !form.controls.username.errors && usernameValid}\\\">\\n    <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"Enter Name\\\" (blur)=\\\"checkUsername()\\\" >\\n     <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.controls.username.errors?.minlength && form.controls.username.dirty || form.controls.username.errors?.maxlength && form.controls.username.dirty \\\">Minimum characters: 3, Maximum characters: 15</li>\\n        <li *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\\\">Username must not have any special characters</li>\\n        <li *ngIf=\\\"usernameMessage\\\">{{ usernameMessage }}</li>\\n      </ul>\\n   </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email address</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) || (!validateEmail && form.controls.email.dirty), 'has-success': !form.controls.email.errors && validateEmail}\\\">\\n    <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"  (blur)=\\\"checkEmail()\\\">\\n    <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\n        <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\n        <li *ngIf=\\\"emailMessage\\\">{{ emailMessage}}</li>\\n      </ul>\\n   </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n     <div [ngClass]=\\\"{'has-error': (form.controls.password.errors && form.controls.password.dirty), 'has-success': !form.controls.password.errors }\\\">\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" formControlName=\\\"password\\\">\\n    <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\n        <li *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters but no more than 35</li>\\n      </ul>\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"confirm\\\">Confirm Password</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\n    <input type=\\\"password\\\" class=\\\"form-control\\\"  placeholder=\\\"enter confirm Password\\\" name=\\\"confirm\\\" formControlName=\\\"confirm\\\">\\n    <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <button [disabled]=\\\"!form.valid ||processing||!emailValid||!usernameValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n</form>\\n\\n<!-- <p>username:{{form.controls.username.value}}</p> -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Maheswari/angular -II/client/src/app/register/register.component.html\n// module id = ../../../../../src/app/register/register.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup ,Validators} from '@angular/forms';\nimport { AuthService } from '../service/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\nform;\nmessage;\n  messageClass;\n  processing = false;\nemailValid;\n  emailMessage;\n  usernameValid;\n  usernameMessage;\n  constructor(\n   private formBuilder: FormBuilder,\n    public authService: AuthService,\n    private router: Router\n  ) {\n this.createForm();\n   }\ncreateForm() {\n    this.form = this.formBuilder.group({\n     email: ['', Validators.compose([\n        Validators.required, \n        Validators.minLength(5), \n        Validators.maxLength(30), \n        this.validateEmail \n      ])],\n     \n      username: ['', Validators.compose([\n        Validators.required, \n        Validators.minLength(3),\n        Validators.maxLength(15),\n        this.validateUsername \n      ])],\n      // Password Input\n      password: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(8), \n        Validators.maxLength(35), \n        this.validatePassword \n      ])],\n     \n      confirm: ['', Validators.required] \n    }, { validator: this.matchingPasswords('password', 'confirm') }); \n  }\n\n  validateEmail(controls) {\n   \n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n   \n    if (regExp.test(controls.value)) {\n      return null; // Return as valid email\n    } else {\n      return { 'validateEmail': true } // Return as invalid email\n    }\n  }\n\n  \n  validateUsername(controls) {\n   \n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\n   \n    if (regExp.test(controls.value)) {\n      return null; \n    } else {\n      return { 'validateUsername': true } \n    }\n  }\n\n  \n  validatePassword(controls) {\n    \n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\n   \n    if (regExp.test(controls.value)) {\n      return null; \n    } else {\n      return { 'validatePassword': true } \n    }\n  }\n\n  \n  matchingPasswords(password, confirm) {\n    return (group: FormGroup) => {\n     \n      if (group.controls[password].value === group.controls[confirm].value) {\n        return null; \n      } else {\n        return { 'matchingPasswords': true } \n      }\n    }\n  }\n  onRegisterSubmit()\n  {\n  console.log(\"form submitted\");\n  const user = {\n      email: this.form.get('email').value,\n      username: this.form.get('username').value, \n      password: this.form.get('password').value \n    }\nthis.authService.registerUser(user).subscribe(data => {\nif (!data.success) {\n        this.messageClass = 'alert alert-danger'; // Set an error class\n        this.message = data.message; // Set an error message\n        this.processing = false; // Re-enable submit button\n        this.enableForm(); // Re-enable form\n      } else {\n        this.messageClass = 'alert alert-success'; // Set a success class\n        this.message = data.message; // Set a success message\n        // After 2 second timeout, navigate to the login page\n        setTimeout(() => {\n          this.router.navigate(['/login']); // Redirect to login view\n        }, 2000);\n      }\n  });\n \n}\ndisableForm() {\n    this.form.controls['email'].disable();\n    this.form.controls['username'].disable();\n    this.form.controls['password'].disable();\n    this.form.controls['confirm'].disable();\n  }\n\n  // Function to enable the registration form\n  enableForm() {\n    this.form.controls['email'].enable();\n    this.form.controls['username'].enable();\n    this.form.controls['password'].enable();\n    this.form.controls['confirm'].enable();\n  }\n\n   checkEmail() {\n    // Function from authentication file to check if e-mail is taken\n    this.authService.checkEmail(this.form.get('email').value).subscribe(data => {\n      // Check if success true or false was returned from API\n      if (!data.success) {\n        this.emailValid = false; // Return email as invalid\n        this.emailMessage = data.message; // Return error message\n      } else {\n        this.emailValid = true; // Return email as valid\n        this.emailMessage = data.message; // Return success message\n      }\n    });\n  }\n\n  // Function to check if username is available\n  checkUsername() {\n    // Function from authentication file to check if username is taken\n    this.authService.checkUsername(this.form.get('username').value).subscribe(data => {\n      // Check if success true or success false was returned from API\n      if (!data.success) {\n        this.usernameValid = false; // Return username as invalid\n        this.usernameMessage = data.message; // Return error message\n      } else {\n        this.usernameValid = true; // Return username as valid\n        this.usernameMessage = data.message; // Return success message\n      }\n    });\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/register/register.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { tokenNotExpired } from 'angular2-jwt';\n\n\n@Injectable()\nexport class AuthService {\n\ndomain=\"\";\n authToken;\n  user;\n  options;\n\n  constructor( public http:Http) { }\n\n   registerUser(user) {\n    return this.http.post(this.domain + '/reg/register', user).map(res => res.json());\n  }\n\n  checkUsername(username) {\n    return this.http.get(this.domain + '/reg/checkUsername/' + username).map(res => res.json());\n  }\n\n  // Function to check if e-mail is taken\n  checkEmail(email) {\n    return this.http.get(this.domain + '/reg/checkEmail/' + email).map(res => res.json());\n  }\n  login(user) {\n    return this.http.post(this.domain + '/reg/login', user).map(res => res.json());\n\n  }\n    storeUserData(token, user) {\n    localStorage.setItem('token', token); // Set token in local storage\n    localStorage.setItem('user', JSON.stringify(user)); // Set user in local storage as string\n    this.authToken = token; // Assign token to be used elsewhere\n    this.user = user; // Set user to be used elsewhere\n  }\n\nloadToken() {\n    this.authToken = localStorage.getItem('token'); \n  }\n\n  createAuthenticationHeaders() {\n    this.loadToken(); \n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/json', // Format set to JSON\n        'authorization': this.authToken // Attach token\n      })\n    });\n  }\n\n\n  getProfile() {\n    this.createAuthenticationHeaders(); \n    return this.http.get(this.domain + '/reg/profile', this.options).map(res => res.json());\n  }\n\nlogout() {\n    this.authToken = null; // Set token to null\n    this.user = null; // Set user to null\n    localStorage.clear(); // Clear local storage\n  }\n\n  loggedIn() {\n    return tokenNotExpired();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/service/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable()\nexport class CrudserviceService {\n\ndomain=\"\";\n\noptions;\n  constructor( private authService: AuthService,\n    private http: Http) { }\n\ncreateAuthenticationHeaders() {\n    this.authService.loadToken(); // Get token so it can be attached to headers\n    // Headers configuration options\n    this.options = new RequestOptions({\n      headers: new Headers({\n        'Content-Type': 'application/json', // Format set to JSON\n        'authorization': this.authService.authToken // Attach token\n      })\n    });\n  }\nnewitem(item) {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.post(this.domain + '/item/newitem', item, this.options).map(res => res.json());\n  }\ngetAllBlogs() {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.get(this.domain + '/item/allBlogs', this.options).map(res => res.json());\n  }\n  getSingle(id) {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.get(this.domain + '/item/singleitem/' + id, this.options).map(res => res.json());\n  }\neditBlog(data) {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.put(this.domain + '/item/update/' +data._id , data,this.options).map(res => res.json());\n  }\n  deleteBlog(id) {\n    this.createAuthenticationHeaders(); // Create headers\n    return this.http.delete(this.domain + '/item/delete/' + id, this.options).map(res => res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/app/service/crudservice.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Maheswari/angular -II/client/src/main.ts"],"sourceRoot":"webpack:///"}